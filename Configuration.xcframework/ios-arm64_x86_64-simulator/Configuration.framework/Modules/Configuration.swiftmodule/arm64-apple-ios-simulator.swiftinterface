// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
// swift-module-flags: -target arm64-apple-ios15.5-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name Configuration
@_exported import Configuration
import Foundation
import Swift
import _Concurrency
public struct ChatConfiguration {
  public enum ChatEnvironment : Swift.String {
    case development
    case production
    public init?(rawValue: Swift.String)
    public typealias RawValue = Swift.String
    public var rawValue: Swift.String {
      get
    }
  }
  public init(environment: Configuration.ChatConfiguration.ChatEnvironment = .production)
  public var bundleID: Swift.String {
    get
  }
  public var clientID: Swift.String {
    get
  }
  public var apiKey: Swift.String {
    get
  }
  public var projectID: Swift.String {
    get
  }
  public var storageBucket: Swift.String {
    get
  }
  public var databaseURL: Swift.String {
    get
  }
  public var googleAppID: Swift.String {
    get
  }
  public var gcmSenderID: Swift.String {
    get
  }
  public var storeName: Swift.String {
    get
  }
  public var cachedBaseURL: Swift.String {
    get
  }
  public var socketBaseURL: Swift.String {
    get
  }
  public var chatBaseURL: Swift.String {
    get
  }
  public var graphQLBaseURL: Swift.String {
    get
  }
  public var anonymousToken: Swift.String {
    get
  }
}
extension Configuration.ChatConfiguration.ChatEnvironment : Swift.Equatable {}
extension Configuration.ChatConfiguration.ChatEnvironment : Swift.Hashable {}
extension Configuration.ChatConfiguration.ChatEnvironment : Swift.RawRepresentable {}
